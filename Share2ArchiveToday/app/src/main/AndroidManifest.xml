<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- Permissions for video downloading and notifications -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- Only needed on API <= 28 to write public storage. We target MediaStore on Q+ so scope it. -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="28" />
    <!-- Read not required for our MediaStore writes; scoped storage avoids this on 29+. -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PROCESSING" />

    <application
        android:allowBackup="false"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@android:style/Theme.NoDisplay">

        <!-- Declare media capabilities for automatic transcoding -->
        <property
            android:name="android.media.PROPERTY_MEDIA_CAPABILITIES"
            android:resource="@xml/media_capabilities" />

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>

        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:theme="@android:style/Theme.NoDisplay">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <activity
            android:name=".ClipboardActivity"
            android:exported="true"
            android:label="Copy clean URL"
            android:theme="@android:style/Theme.NoDisplay">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/plain" />
                <data android:mimeType="image/*" />
            </intent-filter>
        </activity>

        <!-- Video download activity - only available in full flavor -->
        <activity
            android:name=".VideoDownloadActivity"
            android:exported="true"
            android:label="Download Video/Media"
            android:icon="@drawable/ic_share_video_download"
            android:theme="@android:style/Theme.Translucent.NoTitleBar"
            android:taskAffinity=""
            android:excludeFromRecents="true"
            tools:ignore="MissingClass">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:mimeType="text/plain" />
                <data android:mimeType="image/*" />
            </intent-filter>
        </activity>

        <!-- Test activity for debugging video download functionality (debug builds only) -->
        <activity
            android:name=".VideoDownloadTestActivity"
            android:exported="false"
            android:label="Test Video Download"
            android:icon="@drawable/ic_video_download"
            android:theme="@android:style/Theme.NoDisplay" />

        <!-- Debug activity for feature flags (debug builds only) -->
        <activity
            android:name=".FeatureFlagDebugActivity"
            android:exported="false"
            android:label="Feature Flag Debug"
            android:theme="@android:style/Theme.Material.Light" />

        <!-- Download history activity -->
        <activity
            android:name=".DownloadHistoryActivity"
            android:exported="false"
            android:label="Download History"
            android:theme="@android:style/Theme.Material.Light" />

        <!-- Download resumption activity -->
        <activity
            android:name=".DownloadResumptionActivity"
            android:exported="false"
            android:label="Download Manager"
            android:theme="@android:style/Theme.Material.Light" />

        <!-- Background service for video downloads -->
        <service
            android:name=".BackgroundDownloadService"
            android:exported="false"
            android:foregroundServiceType="mediaProcessing" />

    </application>

</manifest>